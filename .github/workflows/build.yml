name: Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build Executables
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022] # ubuntu-22.04-arm

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Libraries (Linux only)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev \
        libxcb-shape0-dev \
        libxcb-image0-dev \
        libxkbcommon-x11-0 \
        libxcb-icccm4-dev \
        libxcb-xkb-dev \
        libxcb-render-util0-dev \
        libxcb-keysyms1-dev \
        libxcb-cursor-dev

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r src/requirements.txt

    - name: Build Executable
      run: |
        pyinstaller --onefile --name "MiniDexed Service Utility" --add-data "src/midi_commands:midi_commands" --hidden-import mido.backends.rtmidi --hidden-import rtmidi src/main.py --noconsole
      env:
        PYINSTALLER_STRIP: 1
        PYINSTALLER_UPX: 1

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-executable
        path: |
          dist/*.exe
          dist/*
        retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Executable
      uses: actions/download-artifact@v4
      with:
        path: ./executables/
        # merge-multiple: true

    - name: Zip Artifacts
      run: |
        for d in ./executables/*-executable; do
          zip -r "$d.zip" "$d"
        done
        ls -lh ./executables/*.zip

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ./executables/*.zip
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: continuous
        commit: ${{ github.sha }}
